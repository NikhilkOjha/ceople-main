// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://arluwakftvvbioprdsmw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFybHV3YWtmdHZ2YmlvcHJkc213Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMyOTg0NjksImV4cCI6MjA2ODg3NDQ2OX0.U04eUjAeBgBEPa5L0rpudKv5CP4haZUGwb916Sgx0t8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Mobile-safe storage implementation
const getMobileSafeStorage = () => {
  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  
  if (isMobile) {
    // Use sessionStorage as fallback for mobile devices
    return {
      getItem: (key: string) => {
        try {
          return localStorage.getItem(key) || sessionStorage.getItem(key);
        } catch (error) {
          console.warn('Storage access error:', error);
          return sessionStorage.getItem(key);
        }
      },
      setItem: (key: string, value: string) => {
        try {
          localStorage.setItem(key, value);
        } catch (error) {
          console.warn('localStorage setItem failed, using sessionStorage:', error);
          sessionStorage.setItem(key, value);
        }
      },
      removeItem: (key: string) => {
        try {
          localStorage.removeItem(key);
          sessionStorage.removeItem(key);
        } catch (error) {
          console.warn('Storage removeItem error:', error);
        }
      }
    };
  }
  
  return localStorage;
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: getMobileSafeStorage(),
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
  },
  global: {
    headers: {
      'X-Client-Info': 'ceople-web',
    },
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
});